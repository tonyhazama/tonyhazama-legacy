{"version":3,"sources":["assets/images/logo.png","assets/images/emblem.png","shared/components/loading-text/loading-text.jsx","app/splash/splash.jsx","app/home/home.jsx","shared/components/sidebar/sidebar.jsx","shared/components/navbar/navbar.jsx","app/layout/layout.jsx","app/about/about.jsx","app/main-page/main-page.jsx","app/app.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LoadingText","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateDots","dots","state","_this$props$dotCount","dotCount","length","setState","_this$props$interval","interval","setInterval","react_default","a","createElement","text","Component","Splash","className","src","logo","alt","loading_text_LoadingText","Home","Container","fluid","id","Row","Col","sm","AppNavbar","menu","path","title","console","log","Navbar","bg","variant","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","map","menuItem","Item","anchor_link_default","concat","Layout","navbar_AppNavbar","children","About","theme","MainPage","home_Home","about_About","App","isLoading","_this2","setTimeout","splash_Splash","layout_Layout","react_router_dom","basename","process","react_router","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8548259b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c91e007d.png\";","module.exports = __webpack_public_path__ + \"static/media/emblem.8e8258b4.png\";","import React, { Component } from 'react'\r\n\r\nexport default class LoadingText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dots: '.'\r\n    }\r\n  }\r\n\r\n  updateDots = () => {\r\n    let { dots } = this.state;\r\n    const { dotCount = 3 } = this.props;\r\n    if (dots.length < dotCount) {\r\n      dots += '.';\r\n    } else {\r\n      dots = '.';\r\n    }\r\n    this.setState({ dots: dots });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { interval = 500 } = this.props;\r\n    setInterval(this.updateDots, interval);\r\n  }\r\n  \r\n\r\n  render() {\r\n    return <span>{this.props.text} {this.state.dots}</span>\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport logo from 'assets/images/logo.png';\r\nimport LoadingText from 'shared/components/loading-text/loading-text';\r\n\r\nexport default class Splash extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fullscreen center\">\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          <div className=\"image\"><img src={logo} alt=\"\"/></div>\r\n          <h5><LoadingText dotCount=\"5\" interval=\"500\" text=\"Comencing teleportation \" /></h5>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container, Col, Row } from 'react-bootstrap';\r\nimport emblem from 'assets/images/emblem.png'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Container fluid=\"true\" id=\"home\">\r\n        <Container className=\"fullpage\">\r\n          <Row className=\"fullscreen center\">\r\n            <Col sm=\"2\">\r\n              {/* <img src={emblem} alt=\"T\"/> */}\r\n            </Col>\r\n            <Col sm=\"8\" className=\"text-left white\">\r\n              <h1 className=\"name\">Muhammad Sultoni</h1>\r\n              <h3 className=\"job\">Web Developer</h3>\r\n              <p className=\"desc\">\r\n                Iâ€™m a Professional Web Developer, passionate about\r\n                design & creative work. Curently Working as a fulltime web dev \r\n                and freelance graphics designer. I read books,  \r\n                play video game  and watch movie in my freetime.\r\n              </p>\r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n     )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nexport default class AppSidebar extends Component {\r\n  render() {\r\n    return (\r\n      <Nav defaultActiveKey=\"/home\" className=\"flex-column\" id=\"sidebar\">\r\n        <Nav.Link href=\"/home\">Active</Nav.Link>\r\n        <Nav.Link eventKey=\"link-1\">Link</Nav.Link>\r\n        <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n        <Nav.Link eventKey=\"disabled\" disabled>\r\n          Disabled\r\n        </Nav.Link>\r\n      </Nav>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Nav, Navbar, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\r\n\r\nexport default class AppNavbar extends Component {\r\n  menu = [\r\n    { path:'home', title: 'Home' },\r\n    { path:'about', title: 'About' },\r\n    { path:'portofolio', title: 'Portofolio' },\r\n    { path:'contact', title: 'Contact' },\r\n    { path:'resume', title: 'Resume' },\r\n  ]\r\n  \r\n  goTo(path) {\r\n    console.log(path);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"transparent\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Tony Hazama</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n            <Nav>\r\n              {this.menu.map(menuItem => (\r\n                <Nav.Item>\r\n                  <AnchorLink className=\"nav-link\" href={`#${menuItem.path}`}>{menuItem.title}</AnchorLink>\r\n                </Nav.Item>\r\n              ))}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport AppSidebar from 'shared/components/sidebar/sidebar';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport AppNavbar from 'shared/components/navbar/navbar';\r\n\r\nexport default class Layout extends Component {\r\n  render() {\r\n    return (\r\n      <Container fluid=\"true\" id=\"container\">\r\n        <Row>\r\n          <Col id=\"navbar\" sm=\"12\"><AppNavbar /></Col>\r\n          <Col id=\"body\" sm=\"12\" className=\"no-padding\">\r\n            {this.props.children}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    const { theme } = this.props;\r\n    return (\r\n      <div className={\"section \" + theme}>\r\n        <Container className=\"fullpage page\" id=\"about\">\r\n          <h4 className=\"text small bold\">About</h4>\r\n            <p className=\"text small\">\r\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n              Vel, veniam nesciunt repellat quaerat architecto temporibus \r\n              consequatur laudantium porro laboriosam asperiores exercitationem minima sed, \r\n              consectetur dolorum eligendi quisquam at recusandae itaque!\r\n            </p>\r\n            <p className=\"text small\">\r\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n              Vel, veniam nesciunt repellat quaerat architecto temporibus \r\n              consequatur laudantium porro laboriosam asperiores exercitationem minima sed, \r\n              consectetur dolorum eligendi quisquam at recusandae itaque!\r\n            </p>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Home from 'app/home/home';\r\nimport About from 'app/about/about';\r\n\r\nexport default class MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Home />\r\n        <About theme=\"dark\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Splash from './splash/splash';\r\nimport Home from './home/home';\r\nimport Layout from 'app/layout/layout';\r\nimport MainPage from 'app/main-page/main-page';\r\n\r\n// import './App.css';\r\n\r\nexport default class App extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.setState({isLoading: false}), 2000);\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return isLoading ? (\r\n      <Splash />\r\n    ) : (\r\n      <Layout>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div id=\"router-wrapper\">\r\n            <Route exact path=\"/\" component={MainPage} />\r\n            <Route path=\"/home\" component={Home} />\r\n            {/* <Route path=\"/topics\" component={Topics} /> */}\r\n          </div>\r\n        </Router>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'assets/scss/index.scss';\r\nimport App from './app/app.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}